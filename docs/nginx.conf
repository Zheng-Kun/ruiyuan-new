user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

# 加载 Brotli 模块（如果系统支持）
# load_module modules/ngx_http_brotli_filter_module.so;
# load_module modules/ngx_http_brotli_static_module.so;

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;

    ##
    # Gzip Settings (增强版)
    ##

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml
        application/xml+rss
        application/atom+xml
        application/rss+xml
        image/svg+xml
        application/x-font-ttf
        application/x-font-otf
        font/opentype
        font/ttf
        font/otf;

    # 暂时保持 Brotli 配置注释状态
    ##
    # Brotli Settings (等找到正确的包后再启用)
    ##

    # brotli on;
    # brotli_comp_level 6;
    # brotli_min_length 1000;
    # brotli_types
    #     text/plain
    #     text/css
    #     text/xml
    #     text/javascript
    #     application/json
    #     application/javascript
    #     application/xml
    #     application/rss+xml
    #     application/atom+xml
    #     application/x-font-ttf
    #     application/x-font-otf
    #     font/opentype
    #     font/otf
    #     font/ttf
    #     font/woff
    #     font/woff2
    #     image/svg+xml
    #     image/x-icon
    #     application/x-font-woff
    #     application/x-font-woff2;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # 设置客户端最大请求体大小
    # 这里设置为220MB，适用于上传大文件的场景
    client_max_body_size 220m;
    # 设置超时时间
    # 这里设置为20分钟，适用于对话场景
    proxy_connect_timeout 1200s;
    proxy_send_timeout 1200s;
    proxy_read_timeout 1200s;

    # NEW RUIYUAN
    server {
        listen 30002;
        server_name _;

        # 静态页面目录
        root /var/www/ruiyuan-new;
        index index.html;

        # 静态资源缓存和压缩优化
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }

        # 单独处理 JS 和 CSS 的预压缩文件
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            try_files $uri.gz $uri;
            gzip_static on;
        }

        # 代理 /api/ 开头的请求到 10000 端口，并去掉 /api/
        location /api/ {
            proxy_pass http://127.0.0.1:10000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/api/(.*)$ /$1 break;
        }

        # 其他请求处理（如静态文件）
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
